pool:
  vmImage: ubuntu-latest

stages:
- stage: SAST
  displayName: SAST
  jobs:
  - job: Job
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'ServiceConnection'
        organization: 'aleja613'
        scannerMode: 'MSBuild'
        projectKey: 'aleja613_spring-boot-kubernetes'
        projectName: 'spring-boot-kubernetes'

    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'
    - task: sonarcloud-buildbreaker@2
      inputs:
        SonarCloud: 'ServiceConnection'
        organization: 'aleja613'
              

- stage: SCA
  displayName: SCA
  jobs:
  - job: Job
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    
    - task: dependency-check-build-task@6
      inputs:
        projectName: 'spring-boot-kubernetes'
        scanPath: '$(Build.SourcesDirectory)/target'
        format: 'XML'
        reportsDirectory: 'Reportes'        
    - script: |
        echo "Archivo de reporte"
        echo "se encuentra en $(Build.SourcesDirectory)/Reportes/dependencyCheckReport.xml"
        echo "se verifica existencia del reporte en directorio"
        ls -al $(Build.SourcesDirectory)/Reportes
        existe=$(grep 'confidence="HIGH' $(Build.SourcesDirectory)/Reportes/dependency-check-report.xml | tr '<>' '\n'  | grep confidence | grep  'confidence="HIGH' | grep ^evidence | wc -l)          
        if [ $existe -gt 0 ];
        then 
          echo "Se detectan vulnerabilidades Altas"            
          #exit 1;
        else:
          echo "Bien!, no detectan vulnerabilidades"
        fi;
      displayName: Script, revisa reporte



- stage: DAST
  jobs:
  - job: Job
    displayName: 'Container security'
    steps:
      - task: Maven@4
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
       
      - task: DockerInstaller@0
        inputs:
          dockerVersion: '17.09.0-ce'
        displayName: Installer Docker

      - task: Docker@2
        inputs:
          containerRegistry: 'spring-boot-kubernetes'
          command: 'login'
        displayName: Docker Login

      - task: Docker@2
        inputs:
          containerRegistry: 'spring-boot-kubernetes'
          repository: 'aleja613/spring-boot-kubernetes'
          command: 'build'
          Dockerfile: '**/Dockerfile'
          tags: 'latest'
        displayName: Image build

      - script: |
            sudo apt-get install -y rpm
            wget https://github.com/aquasecurity/trivy/releases/download/v0.27.1/trivy_0.27.1_Linux-64bit.deb
            sudo dpkg -i trivy_0.27.1_Linux-64bit.deb
            trivy image --exit-code 1 --severity HIGH,CRITICAL aleja613/spring-boot-kubernetes:latest
        displayName: Scan Image Trivi 

      - task: Docker@2
        inputs:
          containerRegistry: 'spring-boot-kubernetes'
          repository: 'aleja613/spring-boot-kubernetes'
          command: 'push'
          tags: 'latest'
        displayName: Push Docker




    
    