pool:
  vmImage: ubuntu-latest

stages:
- stage: SAST
  displayName: SAST
  jobs:
  - job: Job
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'ServiceConnection'
        organization: 'aleja613'
        scannerMode: 'MSBuild'
        projectKey: 'aleja613_spring-boot-kubernetes'
        projectName: 'spring-boot-kubernetes'

    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'
    - task: sonarcloud-buildbreaker@2
      inputs:
        SonarCloud: 'ServiceConnection'
        organization: 'aleja613'
          

- stage: SCA
  displayName: SCA
  jobs:
  - job: Job
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    
    - task: dependency-check-build-task@6
      inputs:
        projectName: 'spring-boot-kubernetes'
        scanPath: '$(Build.SourcesDirectory)/target'
        format: 'XML'
        reportsDirectory: 'Reportes'        
    - script: |
        echo "Archivo de reporte"
        echo "se encuentra en $(Build.SourcesDirectory)/Reportes/dependencyCheckReport.xml"
        echo "se verifica existencia del reprote en folder"
        ls -al $(Build.SourcesDirectory)/Reportes
        datos=($(grep -oP '(?<=CONFIDENCE>)[^<]+' "$(Build.SourcesDirectory)/Reportes/dependency-check-report.xml"))
        for i in ${!datos[*]}
        do
          echo "$i" "${datos[$i]}"
         
        done
      displayName: Script, revisa si existe vulnerabilidad


- stage: DAST
  displayName: DAST
  jobs:
  - job: Job
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    
    